html, css and javascript preparation:
	- 6 slides plus 2 project per topic 
1. parameters vs. arguments: presentation pending
	function parameters: 
		- names listed in the function definition
	function arguments: 
		- values received/passed to by the function
	rules: 
		- function do not specify data types. 
	parameter types:
		- default: acceptable to be undefined but good idea to set defaults like so;
			function my_func(x,y){
				if(y=== undefined){
				y = 2}
				return x * y;
			} #x is undefined but y has a default value. 
			or: default can be set in function declaration
			function my_func(x, y=10){
				return x + y}
		- rest parameter: treated like arrays by a function like so; 
			add = (...args)=>{
				let sum = 0;
				for(let arg of args){sum += args;}
				return sum;
			}
	
2. arrays: presentation pending
3. function: presentation pending
4. conditionals: presentation pending
5. events:presentation pending
6. flexbox: presentation pending
7. grid: presentation pending




				presentation: 
HTML: 
overview: 
	hvad er html: 
		Hyper Text Markup Language: 
		fortæller browseren hvordan en side skal struktures
		består af elementer: 
			header, body, section etc. 
		Afgrænset af tags: <h1></h1>, <div></div>, <article></article> etc.
		Kan bruges til at gøre hvert element/ gruppe af elementer unikke. 
		f.eks. ser et paragraph element sådan her ud,
				billede. 
		det er ligegyldig om det med stort eller små bogstaver. 
		Indhold: det er imellem tags, indholdet sidder. 
			sample code and image for emphasis
anatomy:
	et typisk document: 
		doc type: fortæller typen af documentet. 
		html: document wrapper/ root element.
		head: 
			ikke content. 
			usynlig i browseren
			metadata: meta_elements som viewport, charset.
			styling
			script if preffered
			title
		body: 
			synlig i browseren
			text
			billeder etc.
		hierarchy: typical strukture
			header
			navigation bar
			main content
			sidebar: additional info about main content e.g bio.
			footer
An example: ongoing project: displays the strukture, kind of. 

FLEXBOX:
	hvad er flexbox:
		layout metode der benytter en enkelt dimension. 
		Enten row eller column 
		elementerne tager al tilgængelig plads på siden 
		eller skrumper nå der er ikke mere plads 
		sættes på containeren, og effekten ses på underliggende elementer. 
		fungere ved at dele pladsen på siden lige imellem underliggende elementer
		simplest: sættes display til flex; i styling.
	i forhold til grid:
		flexbox: 
			one dimensional
			fordeling a plads mellem elementer
			meget flexibel mht. devices
			fokus er på content
		grid: 
			multidimensional
			no worries about positioning
			fokus er på layout
	akserne: 
		flex model: 
			container
			main axis
			cross axis
			insert image.
			flex direction: vandret eller lodret
				vis code
			extra dimension via flex-wrap.
	control & responsiveness: 
		deling a plads. 
		min. width: flex 200px f.eks. sætter min for elementerne
		proportion per element:
			flex 1: equal amount
		proportion for specific element: 
			element:nth-of-type(i){flex: 2}
			twice as much as the rest
			align-items: where on vertical axis
			justify-content: position on main axis
			flex-shrink or grow on items to fit container
		project: trada

GRID:
	hvad er grid: 
	en to dimensional layout metode. 
	organisere sidens indhold i koloner og rækker.
	Kan håndtere komplekse layout mønstere.
	sættes på containeren
	
	i forhold til flexbox:
		flexbox: 
			one dimensional
			fordeling a plads mellem elementer
			meget flexibel mht. devices
			fokus er på content
		grid: 
			multidimensional
			no worries about positioning
			fokus er på layout
	praksis:
		simplest: 
			containeren indhold forvandles til en enkelt kolone,
				display: grid;
			det ønsket antal kolonner indsættes via px eller fractions. 
				grid-template-columns: n px, n px n px; 
				|| grid-template-column: 1fr, 1fr, 1fr;
			mulighed for plads mellem kolonner og rækker via gap.
			eksplicit vs implicit grids: 
				ved grid-template-column bestemmes række højde automatisk under implicit
				under eksplicit skal højden angives.
					grid-auto-rows: n px;
				varierende indhold: 
					minmax(min, auto) kan bruges. Sætter min. højde og auto max.
		placering af indhold:
			line-based:
				element{
				grid-column: start/end;
				grid-row: nth row;}
			grid-template-areas:
				- skabe et mønster the passer til design.
				- henvise til grid area i element css. 
				**image of code. 
	komplekse mønster:
		- article site image 
	projekt: trada

CONDITIONALS: 
	hvad er conditional statements:
		simplest/ tættest er de mekanismer, der kontroller, om de fastsatte bentingelser er opfyldt,
		før en handling udføres. 
	formål og brug:
		i denne sammenhænge, vælger de handlinger givet input fra documentet. 
		f.eks. bruges det til at skifte farve afhængige af hvad man vælger. 
	operatør:
		comparison
			== equal to
			=== equal value and type
			!= not equal
			!== not equal value or type
			the rest (>,<,>=,<=)
			if(age < 18){str = "too young to buy alcohol";}
		logical
			&& and
			|| or
			! not 
			x= 3, y = 4 then (x<10 && y>1) is true.
		truth tables: takes 2 values and returns 1 or 0 based on some condition. 
	events: 
		registrering og håndtering:
			Eventlisteners
				element.addEventListener("click", ()=>{do something});
			Eventhandler properties
				button.onclick = ()=>{do something}
			Inline eventHandlers:
				<button onclick="alert('Hello, this is my old-fashioned event handler!');">
	if & switch
			Siden med conditionals. 
	projekt:trada

FUNKTIONER:
	hvad er funktioner:
		en block code designet til en specific opgave.
			f.eks. ()=>{
						alert("Woo, this is a different message!", ""); }
			Denne function viser en besked på browseren. 
	parameter vs argumenter:
		parameters: 
			- navn på variabler der præsentere værdier der gives til funktionen. 
		function arguments: 
			- værdier der gives til funktionen
				function my_func(x, y){
					if(y === undefined){
						y = 2;
					}
					return x*y;}
				my_func(4);
				x og y er parameter og 4 er et argument. 
	oprette HTML elementer vha. javascript:
		document.createElement("type");
		element_i.appendChild("createdElement");
		- den først linje skaber elementet. 
		- den anden smider det på documentet. 
	manipulere html elementer:
		element_i.innerHtml = "str";
		element_j.textContent = "str"
	eksempel:arrays.html
	projekt:function.html & trada

ARRAYS AND ARRAY METHODS
	hvad er et array: 
		måde at hold lister af data under en variabel. 
			- håndtering af store lister
			- handlinger kan udføres på enkelte elementer
			- eller alle elementer
			- der tilføjes eller fjernes elementer. 
	oprettelse:
		const my_array = ["bread", "milk", "cheese", "hummus", "noodles"];
			- kan også oprette fra strings.  
	metoder:
		array.length
		array.indexOf(element)
			position i array'et 
		array.push(element/s)
		array.unshift()
			tilføje til index 0
		array.pop()
		array.shift()
			fjerne fra index 0
		array.splice()
	iteration:
		array.map(handling)
			iterere og handling udføres
		array.filter(criteria)
			iterere og der udtrækkes
		array.join(delimiter)
			forvandler til string
	eksempel:arrays.html
		produkt data tilføjes til documentet
	iteration vs DOM:
		html collection object and node lists
			document.getElementByTagName(element_tag);
			- alle elementer med det tag i en liste der ligner et array. 
			- array metoderne kan bruges til at manipulere dem
			- man kan f.eks. skift font weight for alle h1'er. 
			- min eksempel kopier fra 2 arrays til dom'en. 
	projekt: array.html:

DOM OG EVENTS
	DOM: 
		hvad er det: oversigt over documentet
			document object model: 
				dom image
				adgang til alt documentet. 
				der er et et hierarki
				giver js mulighed for at manipulere elementerne
		adgang og manipulation af elementer
			der flere måder at få fat i dem på
				document.queryselector(match);
					enkelt match
				document.queryselectorAll(match);
					alle matches
					code image
		hyppige DOM-events
			click
			focus
			keydown
			load
			mouseover
			registrering og håndtering
				addEventListener();
					metoden tilføjer en funktion til et element
					venter på et bestemt event
					når eventet hænder udløses function
						code image		
		eventobjekt:
			hvad er det
				et argument der indholder data om eventet.
				der er f.eks. data om event type, target (kilde element) etc. 
			adgang til information
				event.getModifierState("CapLock");
					tjekker om capslock er slået til. 
			hvordan bruge denne information
				rette fejl i funktionalitet
				hjælp brugere med at navigere siden
			
	
			
			
					
		
		
		
		
		
		
		
					
			
			
	
			
		
		
 

	
			